// Code generated for package thumb_5 by go-bindata DO NOT EDIT. (@generated)
// sources:
// sourcedata/thumbs/thumb-5/thumb.jpg
package thumb_5

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _sourcedataThumbsThumb5ThumbJpg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x94\x79\x38\x94\xfb\xfb\xc7\x9f\x59\xec\xeb\x18\x69\x90\x1a\x63\x8a\x2c\x99\xc5\x30\xc6\x32\xc6\xd8\xa6\x63\x9d\x8c\x28\x64\x36\x4c\xc3\x0c\x63\xac\x39\x92\x52\x74\x4c\xf6\xe2\x54\x92\x44\x14\x51\x48\x54\x96\x1c\x4e\x51\x69\x91\x43\x9b\x94\x92\x10\x2d\x8e\x7d\x7e\x57\xfd\xea\x9c\x73\x7d\xaf\xef\x75\xae\xeb\xfb\xfe\xeb\x79\xee\xe7\x7e\xdd\xf7\xf3\xbe\x3f\xf7\xf3\x48\xff\x90\xbe\x04\x10\xce\x09\xbc\x50\x00\xa0\xd1\x8c\x01\x79\xe0\x6f\x49\x27\x01\x98\x53\x2c\x9b\x9f\x08\x80\x00\x28\x00\x00\xb6\x00\x20\x7d\x09\x61\x85\x8b\xc5\x51\x24\x73\x73\x41\xcc\x16\x26\x47\xc8\xe2\x6e\x61\x0b\x23\xcd\x13\x98\x51\xe6\xd8\x2d\x18\x73\xc0\x96\x9c\x10\xc5\x64\xf3\xb9\x62\x24\x8b\x1b\xc6\x13\xd8\xa1\x3e\xb4\xb6\xa1\x90\x3c\x8e\x1d\x6a\x3b\xc1\x03\xe3\x11\x45\xe5\x86\xf3\xdc\x92\x44\xdc\x6d\x49\x9e\xbe\xec\x24\x3e\xdb\x9a\x83\x22\xdb\x23\x6d\x13\x48\x09\x91\x51\x91\x5c\x31\x13\x99\x10\x19\x21\x88\x21\x25\xd8\xa1\xbe\x15\x27\x09\x62\x48\x5f\xc3\xe6\x28\xe4\xb7\x14\x31\xdf\x0e\x45\xf9\xfa\x00\xe9\xef\xe1\x8d\xa4\x0a\x45\x5c\x24\x61\x0b\xc1\x8c\x8d\xc1\x5a\x20\xad\xac\xb7\x60\x09\x58\x0b\x22\xd6\x14\x89\xc3\x60\xf1\xe6\x18\xbc\x39\x16\x6f\x86\xc5\x91\x30\xd6\x24\x2c\x01\xf9\x5d\x28\x7b\xa4\xad\x88\x13\x4a\xa2\x3b\xb9\x7c\xef\x25\xe2\x84\xda\xa1\xbe\x9b\x8a\x8f\x8f\xdf\x12\x8f\xdf\x22\x14\x85\x99\x63\xad\xad\xad\xcd\x31\x38\x73\x1c\xce\x4c\xc4\x09\x35\x8b\x49\x14\x88\x99\x09\x66\x82\x18\x83\x1f\x15\x9c\xb8\x31\x6c\x11\x2f\x4a\xcc\x13\x0a\x90\x5f\xef\x99\x2c\x61\xac\xd8\x0e\x85\xfa\x61\x21\x32\xca\xc3\xe3\xaf\xc2\xff\x75\x5a\x91\x91\xe6\x3f\xb2\x63\xc4\x74\x6e\xe8\xbf\x67\xc7\xf8\x26\x46\x71\xcd\xe9\xdc\x18\x61\xac\x88\xcd\xa5\x73\x43\x0d\xfe\xd1\xea\xdf\xd1\xaf\x89\x51\x1e\x1e\x24\x2f\x11\x2f\x8c\x27\x60\x46\x38\x09\xd9\xb1\x91\x5c\x81\x98\xe6\x64\x87\xc2\x13\xf1\x4e\x8e\x96\xd6\x2e\xd6\x2e\x44\x8c\x13\xc5\x91\x40\xa4\xe0\x31\x58\x0a\x86\x8a\xb5\xb0\xa2\xba\x58\x12\xac\x7f\xb0\xff\x64\x12\x22\xa3\xb6\x70\x78\x1c\x12\x85\x48\xc4\x59\x59\x62\x2d\x09\x56\xce\x56\x58\xac\x33\xd5\xda\x02\x43\xb0\x76\x72\x74\xc4\x10\x9d\x31\x16\x18\x02\xf6\x07\x4b\x13\xc4\x88\x99\x02\x36\xf7\x07\xcb\xfb\x9b\x25\xfc\x2b\x4b\xa2\x8a\xb8\x4c\xb1\x50\xe4\x2b\x14\x46\xfc\x38\x79\xef\x70\xa1\x58\x18\x13\x2e\x8c\x42\x52\xa9\x48\xa3\xed\x3c\x01\x47\x18\x1f\xb3\xf9\xeb\xa9\x7c\x7f\x51\xae\x88\x17\xc7\xe5\xb8\x88\x84\x91\xc8\x6f\x63\x25\xf1\xfe\x4b\x7b\x2c\x97\xc8\x0c\x25\x5a\xe0\xcc\x98\x38\x2b\x82\x19\x87\x6d\xc1\x36\x63\x71\x38\x58\x33\x2e\xc1\xca\x2a\x14\x83\x61\xe1\x88\x4c\x1c\xea\x3b\xcf\xf9\x5f\xc6\x65\x6e\x8f\xb4\x35\xff\x8f\xfd\xf8\x11\xa2\x3b\xb9\x7c\xbd\xfc\x6b\xdb\xed\x91\x7f\x7f\x2f\x5c\x01\xc7\x0e\x25\x42\x91\xed\xa5\xd3\x80\xea\x37\xa7\x00\xa7\x1d\x00\x00\x90\xf4\x09\x70\x00\x90\x85\x42\xa1\x32\x50\x59\x19\x19\x59\x05\x59\x19\x59\x05\x25\x79\x59\x59\x79\x25\x65\x45\x45\x25\x45\x45\x65\x75\xe5\x6f\x52\x57\x56\x55\x53\x57\x53\x55\x86\xc3\x35\x35\xe1\xf0\x75\xba\xba\xba\xeb\x36\xfc\x25\x90\x9c\x9c\x9c\x8a\xb2\x0a\x42\x5d\x1d\xa1\xb3\x06\xb6\x46\x67\xc3\xff\x2a\x69\x3b\x00\x93\x07\x6c\x81\xa3\x10\x10\x0c\x00\xc3\x40\x10\x18\x48\xda\x05\xa4\x03\xa0\x6f\xfa\xfb\xa7\x01\x01\x43\x41\x80\x3c\x08\x80\xfc\x33\xf8\xd5\x06\x18\x02\x55\x07\xc0\x60\x10\x04\x0a\x40\xa1\x32\x10\x99\xff\x0f\xc2\x20\x80\x3e\x56\x83\xe2\x03\x87\x32\xa3\xf7\xa1\x72\x4f\xe3\x34\xeb\x3b\x1c\xe9\x06\x2f\x45\xe8\x59\x16\x5e\x86\x00\x03\xc0\x60\x30\x04\x00\x41\xc1\x90\x1f\x75\x60\x60\x7d\x2c\x45\x03\xe2\xc3\x44\xe1\xe0\xd1\xfb\x4e\xd7\xd3\xa5\xc3\x80\x32\x04\x04\x80\x61\x10\x18\x40\x06\x16\x73\x3a\xfa\x4f\x40\x95\x36\x7c\x62\x90\xff\x54\xeb\x35\xba\x73\x4d\x92\x17\x89\x1e\xd7\xfd\x79\xc6\x20\xcf\xb4\x45\x9e\x41\x9f\xa6\x84\x80\x00\x40\xd9\xfd\x04\x4f\xe1\x39\xe6\x08\x63\x9b\xe8\xe3\x0e\x4a\x4a\x6a\x4a\xa1\xde\x81\x91\x3f\x0a\x37\xf6\x6a\xad\x6d\x48\x6e\xe8\xfc\x29\xd6\x7d\x26\x1f\x39\x8d\x49\xbd\x70\x22\x9e\x41\xef\x73\xf0\xb9\x6a\x13\x92\x63\x79\xb4\xf3\x63\xe0\x28\xbf\x76\xed\xe9\xba\xae\xe5\x10\x5a\xfb\x31\xbe\x1d\x8c\xb5\xe4\x9a\x55\x4d\xd6\x52\x51\x74\x23\x25\xbf\x89\xee\xd4\x9f\xd3\xbf\xde\x60\x65\x80\xb4\x6d\x37\x1e\x0f\x71\xe9\xda\xed\xa5\x27\xdf\x75\xbf\x71\x47\xf6\xd5\x0e\xaf\x3d\x97\x65\xa0\x9b\x6d\x7c\x73\xfa\x1c\xa6\xe3\x7c\x0e\x2b\xa4\x14\x06\xba\x39\x5e\xe4\xc9\x50\x0e\xb7\x6e\x86\x05\xe6\xc9\x0f\x3a\xb2\x2c\x10\x4f\x0c\xef\x5d\xe7\xe7\xbb\x9e\xbc\xb0\x64\x2c\x13\xb9\x5a\x7a\x93\xa1\xd7\x27\x9c\xe9\x44\xb6\x58\x7c\x34\x7e\x54\x7d\xd6\x57\x58\x15\x79\xcb\xee\x56\x97\xe5\xeb\x5f\xce\x5b\xea\x4b\x4c\xe9\x08\xd5\x3c\xcb\xe5\xe8\xe2\x00\xcb\xf2\xf4\xd8\xc6\xf3\x48\x0d\x8d\x80\x82\xcf\xcc\x52\xb9\x57\x86\xb2\x3c\xd7\x7d\x1e\x87\xf5\xb6\xd3\xbb\x53\x42\xf6\x0e\xba\x3b\x6e\xab\xd7\xdf\xa3\x2c\x2b\x57\xaf\xd0\xd1\x7d\x22\x10\xfe\x11\x47\x2e\xc1\xdb\x9c\x13\x1d\x08\x1d\xbd\xd4\x05\x7a\x94\x0f\x79\x77\x60\x2d\xe6\x6c\xda\xf3\x67\xfa\xda\xed\xf1\xa3\x0a\x39\x95\x0d\x45\x68\x50\x1a\x9d\xda\x92\x69\xe3\xcd\xb3\x6c\x10\xd5\xc9\x43\xca\xa6\xa1\x5f\x5e\x20\xce\x7f\xbc\x7b\xfc\x82\xc8\x2f\x95\x58\x2b\xe1\xef\x36\xac\x83\x24\x7b\xef\xbc\x9c\xe0\x9c\xe0\xbf\x7a\x3e\x30\xbf\xdf\x31\xfb\x77\x76\xae\x78\x67\x64\x7a\x6c\x68\x4b\xd0\xfd\xa7\x2d\x60\x87\x50\x34\x62\x3c\x25\xc1\x10\x1d\x7c\x92\xbf\xf9\x52\x75\x59\xc2\x50\xc4\xf5\x52\x48\x55\xa1\xdc\x05\x95\x7a\x4b\x86\xd6\xc6\xc9\x8a\x39\xbe\x32\x83\xea\xef\x92\xa5\xe9\xbe\xbe\xeb\x77\x84\x4a\x90\x99\x4c\xe4\x68\xf7\x9a\xd4\x65\xe4\x5a\x90\x1b\x3a\xbf\xd4\xc6\xa1\x53\x69\x25\x53\x4b\xf8\xa5\x33\xdd\xc8\xc7\x25\xe7\xb6\x03\x64\x26\x0b\x79\x67\x91\x71\xad\xec\xfe\xf5\xe8\x80\xdd\xb7\x67\x75\xf2\xea\xe2\xc6\x1d\x6e\x6e\x7c\x40\x4c\xd5\xe9\xd5\xe9\xf7\xcd\x36\x45\xd4\xa2\x81\xbd\xd7\x3e\x77\x2a\x5e\x29\xdb\xb5\xbb\x97\xd4\x18\xe4\xd4\xa6\xcf\xb7\xaf\xf5\x1a\x76\xed\x08\x73\xd3\xab\x9f\xbc\x79\xfe\xa2\x75\x58\xf2\xcb\xe3\x69\xfa\x96\x70\xc8\xd1\x5f\x6c\x4e\x52\x0c\x28\x99\x67\xb6\x3a\xbd\x75\x3e\x6c\x0d\x36\x65\xb5\xf3\x7b\xb8\x0b\x19\x8f\x31\x09\x16\x7e\x3e\x0a\x32\x4a\xdb\x9b\x9c\x69\xe8\xca\x05\x86\x7b\x2c\x48\xe1\x9d\xcd\x48\xe8\xcc\x60\xc7\x88\x5d\xfb\x9b\x7b\x97\x8b\x91\xb3\x27\x43\xf4\x9a\xa6\x32\x5e\x5c\x47\xe1\x78\xf1\x4e\x8e\x7d\x33\xa5\xbb\x3d\x9b\x47\x7e\x6b\x68\x82\xd4\x0c\x56\x29\xab\x30\xea\x26\x95\x4e\x55\x94\xb2\x3b\xf2\x8f\xff\x0c\xe3\x39\x56\xbd\xdd\xd4\xad\xbb\x16\xe7\xda\xdb\xa4\x71\xb0\x4a\xbb\xd8\x7a\x6a\x98\x7f\x3a\x1b\x93\x15\x02\xee\x66\xb9\xc9\x79\x56\x2a\x4e\x06\x1f\xdd\x7a\x55\xff\x70\xc1\xae\xe0\xa3\x66\x48\xb9\x10\x4e\x3a\x58\x39\xb7\x9e\x08\x11\xe5\x51\xab\xab\x53\x4b\xa3\xbd\x01\x58\xdd\x24\x96\x56\x56\xbb\xc9\x73\x03\xab\x91\x75\xe9\x27\x95\x01\x8a\x61\x50\x53\x27\x74\x25\xaf\xdd\x6a\x88\x37\x72\x31\xa0\xf6\x0a\xf3\x56\xa6\x86\xec\x88\xc3\xb0\xa7\xfc\x71\x1b\xbb\x0b\x6b\xa6\x02\x91\xbe\xba\xbf\x90\x27\x04\xa7\x93\x7a\x02\x88\x0f\x44\x26\x49\xe5\xa5\xe8\xb9\xf3\xd0\x41\xef\x1d\x13\x0e\xfa\x45\x08\xc3\x9f\xe5\x89\x23\xe9\xe3\xc5\x13\xc5\x93\x66\xbc\x8f\xea\x4f\xa0\xeb\x28\x10\x07\xa7\x62\x62\x43\xf8\xe4\xf3\x72\xc6\xeb\xae\xf9\x9a\xa8\x76\x7e\x50\xda\x5e\x18\xb0\x8a\x00\xf3\x5e\xe2\x09\x03\x8f\x04\xca\xde\x8c\x70\x38\xd3\x60\x2a\xc4\xf2\x11\x7b\xe3\x7d\x43\x13\xe5\x1d\x53\xf5\x87\x8e\xfc\x9a\xce\xdb\xb0\xc0\x59\x23\x37\x02\x68\x44\x63\x4d\xda\xba\xab\xed\xcb\x87\xbc\xb6\xfc\xb4\x6b\xc1\xcc\xdb\xf6\x48\x97\x86\x61\xe9\x49\x50\xf6\xc1\xcd\x84\x94\xa0\xdd\x2f\xc8\x93\x53\xbf\xe5\x9d\x3d\xdf\xad\x6e\x24\x03\x2e\x36\xe9\x09\x45\x82\x4a\xdf\x1f\x71\xe3\xb5\x8c\x69\x56\xcf\xf9\x3d\x4e\x54\x0c\xac\xfc\x60\x53\xdd\x5d\x0e\x7a\x02\xb7\xba\x58\xcd\xbb\x6d\x38\xb8\xbd\xf6\x32\x9b\x74\x3a\x06\x49\xc1\x91\xe4\x1f\x06\x22\xae\x7d\x32\xe3\xae\x7d\x3b\x77\x2d\x35\x0a\x70\x79\xbd\x3b\xc5\x31\x5a\x67\xb5\xa5\x23\x9e\xba\x93\x11\x56\x65\x76\xc5\x19\xbe\x2c\xca\xbd\xfd\x89\x53\xb4\xec\x39\xd2\xd1\x75\x87\xd4\x61\x49\x2a\x3b\x16\xd3\x93\x81\x2e\x19\x11\xa6\xd1\x37\x3d\x70\xb8\xef\x2e\x05\xf2\x7e\xb7\xc2\x3c\x26\x41\xea\xf4\xea\xfb\x60\xce\xe6\x06\x1e\x8c\xaa\x4d\x30\x97\xf2\x0c\x40\xed\x88\xe9\xb1\xb9\x47\xea\xa6\xad\x3e\x04\xbf\xd8\x53\xef\x99\x2f\x82\xf6\x75\x7b\xb9\x86\xd9\xae\x37\x0f\x92\xeb\xa1\x6b\x61\xfc\xab\x27\x1c\x26\x68\x86\xf4\x28\x38\x8f\xcf\xbc\x52\xbf\xbd\xa1\x32\x7d\x5f\xf8\xc3\xc2\xcb\x70\x52\x8e\x21\xcb\x40\x7e\xe3\xd0\x4e\xf7\xc6\x33\x0f\x58\xc1\x7e\x3d\xa4\xb5\x9b\x68\xba\x4e\xa3\xa2\xcf\xf4\x1a\x03\xd3\xca\x2f\x2b\x71\xfe\x8e\xb0\x8c\xd4\xdb\x8e\xb9\xf3\x4e\x59\x01\x3a\xbe\x23\x07\x5a\x5e\x9f\x23\xa4\x92\xc0\x54\x8c\xba\x93\x86\x82\x81\xc3\x4d\xf7\xa8\x21\x8f\x96\x8f\x87\x92\xde\x37\xfa\xc5\x4a\x18\x83\xe5\x93\x14\x44\xb8\x87\xa1\x4a\x5a\xe3\x73\xb3\x98\x31\x59\x40\xc3\x97\xf6\xbe\x7f\xdf\xa0\xc2\xe6\xc7\x4f\x65\xed\x8e\x0f\xdd\x21\xb3\x02\x30\xc1\xee\xae\x51\x36\xcb\xd8\x4b\x8c\x8b\x15\xb9\xc3\x88\xfe\x26\xac\xf7\x80\x16\xb2\x10\xaa\xad\x6e\x89\xee\x3b\x41\xd3\x7a\x76\xd6\xd3\xe9\xf4\xb1\xfd\x7f\xf4\xe4\xe7\x24\x97\x11\xd4\xc9\xee\x7a\xa5\x4c\x48\xe3\xc3\x4e\xec\xb3\x30\xb5\xe0\xcb\x01\xe3\x6b\x3a\x56\x4c\xad\x80\x08\x1a\x62\x48\x92\x1c\x68\x24\x5a\x58\x3b\x88\xf4\xb8\x38\x25\x5b\xdf\xb7\x5f\x03\x90\x00\x72\xcc\x9c\xbb\xdd\x03\x79\x0c\x7f\x6a\x62\x57\xf6\x82\xc2\x0c\xac\xed\x2d\xf1\xd6\xf8\xaa\x62\xf9\xa7\x4b\xbd\xda\x49\x05\xc1\xcb\xbe\x52\x00\x5f\x70\x77\xab\xe5\xf3\x74\x99\x56\x5e\x7f\xec\x22\x8b\xe0\xa5\xbf\x04\x90\xce\xee\x7d\x3a\x02\x9b\xd1\x39\xf5\x52\x02\x7b\x57\xb4\xcb\xc7\x4d\xa5\x3c\xf9\x46\xa2\x49\xa8\xc4\x54\xdb\xe3\xa0\x14\x60\x1a\x2b\xaa\x80\xfd\xeb\x57\xcb\x2a\x00\x48\x9d\xa1\x51\xe7\x9e\x1d\x3a\xed\x4d\xc7\x4c\x8d\xcf\xdd\x3c\x19\x70\x65\xf4\xfa\x6a\x18\x78\x72\xde\xbd\xa5\xba\xb6\x59\x1e\x45\xc1\xe3\x68\x36\x79\x49\x27\xb4\x19\xd5\x2e\x36\x76\x6d\xce\x76\x17\xd7\xec\xae\x99\x54\xa7\x61\xe7\xaa\x74\x7b\xc5\xc4\x97\x27\x2e\x0e\xde\x6d\x4a\xd7\xcb\x0e\xf0\xd0\x5a\xb9\x97\x84\xdf\xf0\x0e\x19\x45\x06\x9f\x09\xa4\x33\xaa\x5c\xc6\x1a\xc9\xeb\xc0\xba\x52\x60\x97\xb7\xb1\xe3\xe2\x52\xbb\xb7\x22\x7c\x06\xed\x60\xb8\x9e\xe6\x99\xaf\xaa\x5e\x39\xb0\x4b\x11\x4f\x1d\x3c\x83\xa1\x41\x79\xcd\x40\x61\x04\xfa\xc1\x6a\x6c\x72\x41\xe9\x63\x88\x89\x0c\xb5\xfa\x0f\x32\x45\x0a\x24\x7d\x5e\x64\xe9\x2c\xb1\xb4\xf9\x91\x17\x3e\xf8\x83\x22\xc3\xd1\x69\xf2\x4a\xea\x6e\x64\xcf\x3f\x7e\x25\x19\x4f\xcc\x85\xcf\xfa\x1a\xbf\xea\xd2\x79\x04\xef\x4a\xe5\x08\xbc\xee\x69\x30\x23\xae\x15\x9d\xdb\xb3\x75\x30\xa8\x30\xcf\x04\xdd\x99\x43\xcb\xd8\x2f\x4b\x6e\xd5\xfe\xb5\xd5\xa3\xb3\xc3\xaf\x2d\x87\x5c\xa7\x59\xe0\xe0\x5c\x08\x50\x71\xdd\x6f\xc7\x24\x32\x53\x03\x71\xd5\xb7\x08\x75\xbb\xf7\x01\xba\x9a\x8a\xe7\x72\x91\x1a\xd0\xdc\x2c\xc1\x74\x41\xc0\x1d\x49\xca\x95\x0d\xe0\x68\x75\x4d\x97\xeb\xdd\x87\x90\x37\x4e\x06\xae\x53\xac\x99\xd4\x55\x1d\x28\x51\x1a\xf6\x9c\x5f\x6b\x68\x32\xf6\xb6\x05\x40\x69\x39\xf4\xf7\x69\x78\x45\x5e\x2a\xee\x0d\x28\xd6\xc4\x2d\xef\x7b\x9a\x1c\xad\x63\x02\xe1\x7b\x7c\x96\xbc\x2a\x96\xab\x7d\xf1\x5e\x62\xb0\xe9\xa3\xf8\xd8\x9c\xe6\xac\xad\x71\x11\x5a\x70\xbf\x59\xef\xa0\x51\xda\xc3\x38\xfa\x11\xbc\xb1\xdd\x45\xc0\xcc\xa8\x14\xf4\x64\x1b\x44\xfb\x64\xc9\xce\x79\xdb\x6b\xbc\xf3\xbd\x6c\x18\x3b\xe7\xce\x63\x9a\x8e\x91\x5e\x48\x48\xb0\x56\xa2\xe2\xdc\x5c\x00\x47\xd5\xb6\x61\x6b\x13\xfa\x4f\x91\x25\x04\x1a\x16\x16\x56\x93\xff\x2e\x69\xd0\x77\x43\xcf\xa8\x9f\x8a\x6a\x82\xf6\x26\xd0\xc9\x2e\xa1\xe4\xaa\x61\xcf\xdd\xde\x20\xf6\xf2\x2f\x7b\x96\x34\xcf\x89\x8c\xe3\xd1\xc6\xa9\x15\xee\x25\x07\x69\xfd\xac\x8e\xf8\xb8\x5a\x3a\x25\x68\x7a\xa5\xf6\x08\x08\x8c\x3e\xc7\x03\x4a\xba\x7e\x7e\x22\xee\x26\x4c\x15\x4c\xe6\xbb\x1e\xaa\x71\xce\x10\x7c\x46\x6c\xb6\x49\xcf\x29\x97\x74\x00\x19\x44\xf8\xe2\x40\x41\x25\x80\x0c\x76\xd7\x5b\xa0\x1c\x92\x09\xd9\xff\xd8\xb7\x5d\x58\x61\xc1\xa9\x60\xd6\xc3\x3b\x3c\x0e\xbe\x01\xce\xba\x7b\xb7\xa4\x82\x4f\x42\xdb\x75\xf6\x5b\x9b\x18\xfe\x54\x7d\x26\xb0\x22\x62\xae\xc6\xf7\x4b\xc4\xe5\xbd\x57\x1c\x08\xc5\xfd\xfc\xd9\x13\x45\xfb\xcb\x0e\x07\xcb\xd7\x99\xf9\x3d\x8c\xd8\x67\xcc\x67\xc5\xf5\xbb\x91\x1d\xb1\x17\x72\xc6\x02\x36\x96\xee\xba\x9d\xe9\x0a\x69\x0f\x3c\x1d\x74\x70\xd4\x3d\xe3\x1d\x69\xa4\xa8\xc6\xff\xc6\x7a\xe8\x17\xfe\xf9\xe3\x33\x69\x85\x58\x27\xe0\xde\xb3\xf2\xfc\x59\x58\x56\xba\x4a\xf9\xf3\x83\xbb\x9f\xa9\x19\x97\xde\xad\x09\xc0\x28\x4c\xab\x51\xf3\x04\x25\x22\x35\x8b\xd9\x79\xca\x7a\x6a\x15\x6f\x89\xda\xf7\xe1\xc6\x62\xc8\xae\xed\x97\x56\x58\x5b\x09\xa9\x69\x7a\xb7\x06\xeb\x30\x06\xe3\xb8\xe2\x9e\x37\x2f\xf1\x14\x78\xd3\x7c\x6e\x75\x60\xb1\x5d\xea\x8e\x61\x1f\x31\xba\x9e\x3d\x84\x52\x7b\x54\x74\x1b\xd3\x7a\x34\xf7\xac\xaf\x91\xa2\x85\x37\x00\xa9\x9b\xca\x3c\x7e\x76\xa0\x3c\x2c\x61\x73\x0c\x36\xdd\x0a\x48\xd9\xea\xb0\xea\x8f\xb8\xb1\x37\xaf\xdf\x64\x49\x0b\xfb\x68\x10\x44\x9b\xcf\x44\x27\x77\xb4\x57\xdf\x8c\xbc\x81\x20\xe0\x03\xa6\x35\x14\x66\x15\x7f\x67\x4c\xa4\x8c\x1b\xbe\x8e\xbe\x66\x40\x1a\x1a\x5e\x39\x7a\xe8\xb5\x49\x73\x9e\x43\xed\xef\xc8\xb9\xf0\x34\xb5\x3e\xe5\x7c\xce\xe8\x0b\xea\xc3\x7b\x43\x90\xb3\x3f\xb5\x79\x7a\x55\xbe\x96\x05\x17\x7c\xf8\xec\x22\xe4\x67\x34\x64\x9a\x9a\x1a\x47\xec\xaf\xae\x2e\x36\xf0\x9c\x3d\xe2\x36\x51\xf8\x6a\xf5\x50\x15\x7f\xfd\xc3\x82\x8c\xfa\x35\xfb\x74\x20\x55\x72\xf3\xac\xcd\x0c\xbf\x7e\xaf\xe6\xaa\xdf\x10\x12\xda\xa8\xc3\xfb\xd3\xd9\xe7\x88\xfd\x1f\xde\xd4\x84\xe3\xbd\xfd\x5a\xae\x67\xfb\x14\xe9\x1a\x2b\xba\xd2\xb6\xad\xf3\x1a\xc5\xf8\xe3\x56\x8a\x62\xf7\xb8\x64\xb3\xda\xd6\x78\x56\xee\x50\x3d\xb3\xb7\xb1\x22\x49\x4c\x3e\x6a\x90\x64\xe5\x12\xf3\x58\x0a\x98\x14\x26\xbe\xf2\xd6\x57\x97\x6c\x6d\x48\xf5\x5f\x5f\x87\x6d\x84\x56\x4c\xf1\xac\x27\x37\x56\x4d\x34\x6e\x3d\xd0\xb8\xe3\xc1\xfd\xb9\x77\x75\xd8\x06\x65\x97\x92\x09\xdf\x9a\x92\x72\x9d\xe1\xc6\x72\x70\x9f\x42\x5d\xc4\x99\xcb\xf0\xa7\xa7\x7a\x74\xf5\x7d\x4c\x42\x9a\x9b\x16\x0e\x6d\x8c\x5d\xd7\x33\xdc\x12\x07\xd9\x96\x77\x37\xcb\xb4\xc4\xbe\xd0\x04\x24\x7e\xc3\x1c\x26\x60\x14\x74\x92\xbb\x41\x4b\x57\xe1\x03\xd9\xc3\xe5\x7b\x85\x6f\x49\xaf\xac\xdf\x9d\x96\x02\xca\xee\x8d\x1d\xb9\xd7\xda\x5a\x83\x9a\xe7\x9f\x24\x8e\xf5\xe6\x2c\x5f\x6a\xc6\x5d\x19\x5b\xd1\x71\xdd\x8c\xbf\x91\x8b\xd7\x65\x11\x30\xf7\xa5\xc0\xbd\xbd\xa6\x7d\x43\xb6\x57\xc6\xfa\x7a\xde\x36\xf9\xdc\x71\x9b\x90\x02\x47\xc3\xbf\x5c\x9d\xbd\x7c\x42\x74\xaa\x35\xeb\x43\x17\x2b\xb4\xa0\x3f\xa5\x61\x81\x4e\xde\x7e\xc0\x69\xea\x86\xd6\x7d\x8b\x4c\x8b\x95\x1b\xe6\xad\x9f\x3b\xde\xda\x24\x87\x46\x1b\x6c\xd7\xdb\xd5\x91\xf5\xf1\x95\x14\x50\xb5\xdd\xf6\xe7\x6c\xf1\x58\xb9\x97\x7f\x56\x68\xc0\xfb\xd4\x95\x84\x99\x23\x81\xcd\xb4\x4f\x31\x47\x02\x2b\xdd\x24\x89\x9e\x38\xa3\xb8\x36\xab\xe9\x43\x53\x0b\xd1\x07\x4f\x19\x22\x24\x96\x92\xf8\x5b\x84\x6b\x73\xc6\x2f\x9e\xcd\xd8\x7b\xae\xa7\xe9\x7a\x6d\x58\x97\xf9\x6a\x36\x4b\xa9\xf2\xf5\x92\x82\x50\xed\x85\x14\xc8\x3f\xa4\xaa\xb4\xae\x2c\xf1\x56\xc6\x22\xdb\x25\xee\xfd\x8b\x4d\xc7\x17\x12\x82\xad\x24\xf6\x89\xf2\xe3\x3b\xf1\x64\x73\x7c\xd7\xc2\x59\xdb\xc0\xbd\x4d\xaa\x9f\x2a\xbc\xab\x16\xac\x8d\x56\x3f\x1c\xac\xbf\xb9\x58\x66\x3d\xfb\xfe\x46\xd1\x2f\x57\xbc\xed\xc8\xc3\xab\x4f\x53\xae\xe6\xf7\x1e\x33\x2a\xc9\x7f\xc0\xd6\xc5\xcf\x3c\x56\x49\xa9\xdc\xf0\x64\xb0\x9b\xd8\x9e\x31\x6c\xaf\x6d\xd4\x5a\x72\x29\xf9\x91\x14\x68\x5e\x6e\xa3\x65\x2e\x7a\xe2\xfc\xb2\xa5\x43\xff\x17\x00\x00\xff\xff\xa2\xed\x19\x2e\xc8\x0f\x00\x00")

func sourcedataThumbsThumb5ThumbJpgBytes() ([]byte, error) {
	return bindataRead(
		_sourcedataThumbsThumb5ThumbJpg,
		"sourcedata/thumbs/thumb-5/thumb.jpg",
	)
}

func sourcedataThumbsThumb5ThumbJpg() (*asset, error) {
	bytes, err := sourcedataThumbsThumb5ThumbJpgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sourcedata/thumbs/thumb-5/thumb.jpg", size: 4040, mode: os.FileMode(420), modTime: time.Unix(1714893639, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"sourcedata/thumbs/thumb-5/thumb.jpg": sourcedataThumbsThumb5ThumbJpg,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"sourcedata": &bintree{nil, map[string]*bintree{
		"thumbs": &bintree{nil, map[string]*bintree{
			"thumb-5": &bintree{nil, map[string]*bintree{
				"thumb.jpg": &bintree{sourcedataThumbsThumb5ThumbJpg, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
